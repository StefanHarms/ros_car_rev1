FROM balenalib/%%RESIN_MACHINE_NAME%%-ubuntu:xenial

# Switch on systemd init system in container and set various other variables
ENV INITSYSTEM="on" \
    TERM="xterm" \
    PYTHONIOENCODING="UTF-8"

# Variables for ROS distribution, configuration, and installation
ENV ROS_DISTRO="kinetic" \
    ROS_CONFIG="ros_comm" \
    ROS_EXTRA_PACKAGES=""
ENV ROS_INSTALL_DIR="/opt/ros/${ROS_DISTRO}"
ENV ROS_HOSTNAME="localhost"

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

RUN apt-get -qq update --fix-missing\
  && apt-get install -yq --no-install-recommends \
    build-essential \
    git \
    python-dev \
    python-pip 

# Install ROS-related Python tools via pip
COPY ./requirements.txt .
RUN pip install -q -r requirements.txt

RUN apt-get -qq update --fix-missing\
  && apt-get install -yq --no-install-recommends \
    ros-kinetic-ros-base

#RUN git clone --recursive https://github.com/sunfounder/SunFounder_PiCar-S.git

RUN rosdep init \
    && rosdep update

#RUN mkdir -p /usr/src/ros_${ROS_DISTRO}_ws/src ${ROS_INSTALL_DIR}

#WORKDIR /usr/src/ros_${ROS_DISTRO}_ws

WORKDIR /usr/src
COPY test test

RUN echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
RUN chmod +x /opt/ros/kinetic/setup.bash
RUN /opt/ros/kinetic/setup.bash 
#RUN catkin_make  


# Clone and build Sweep ROS plus some additional ROS packages it depends on
# NOTE: Build with catkin_make here because they modify CMake variables ...
#RUN git clone https://github.com/scanse/sweep-ros.git src/sweep_ros \
#  && /bin/bash -c "source ${ROS_INSTALL_DIR}/setup.bash && \
#                   catkin_make -DCMAKE_BUILD_TYPE=Release"

# Debugging .dockerignore
RUN cat .dockerignore && ls -lah

ENTRYPOINT ["./entrypoint.sh"]